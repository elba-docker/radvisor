on: [push, pull_request]

name: build/test

jobs:
  check:
    name: Check (Linux)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      # Cache cargo dependencies
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}-check
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}-check
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}-check

      - uses: actions-rs/cargo@v1
        with:
          command: check

  check-win:
    name: Check (Windows)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      # Run vcpkg caching based on latest release version from GitHub
      - name: Determine vcpkg version
        run: echo "::set-env name=vcpkg_version::$((Invoke-WebRequest -Uri https://api.github.com/repos/microsoft/vcpkg/releases/latest | Select-Object -ExpandProperty Content | ConvertFrom-Json).tag_name)"
        shell: pwsh
      - name: Cache vcpkg
        id: cache-vcpkg
        uses: actions/cache@v1
        with:
          path: vcpkg
          key: ${{ runner.os }}-vcpkg-${{ env.vcpkg_version }}-openssl
      - name: Clone vcpkg
        if: steps.cache-vcpkg.outputs.cache-hit != 'true'
        run: git clone https://github.com/Microsoft/vcpkg.git
      - name: Bootstrap vcpkg
        if: steps.cache-vcpkg.outputs.cache-hit != 'true'
        run: .\vcpkg\bootstrap-vcpkg.bat

      # Either upgrade or install open SSL
      - name: Install open-ssl
        if: steps.cache-vcpkg.outputs.cache-hit != 'true'
        run: .\vcpkg\vcpkg install openssl:x64-windows-static
      - name: Update open-ssl
        if: steps.cache-vcpkg.outputs.cache-hit == 'true'
        run: .\vcpkg\vcpkg upgrade --no-dry-run openssl:x64-windows-static

      - name: Install vcpkg integration
        run: .\vcpkg\vcpkg integrate install
        shell: pwsh
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      # Cache cargo dependencies
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}-check
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      # Perform build checks
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: -Z features=itarget
        env:
          OPENSSL_STATIC: 1
          RUSTFLAGS: -Ctarget-feature=+crt-static

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      # Cache cargo dependencies
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}-test
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}-test
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}-test

      - uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt
          override: true

      # Cache cargo dependencies
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}-fmt
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}-fmt

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: clippy
          override: true

      # Cache cargo dependencies
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}-clippy
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}-clippy
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}-clippy

      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
